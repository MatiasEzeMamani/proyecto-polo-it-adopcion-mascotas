package com.adopciones.adopcionmascotas.controladores;

@RestController
@RequestMapping("/api/pets")
public class MascotaControlador {


	    @Autowired
	    private PetService petService;

	    // Crear nueva mascota
	    @PostMapping("/add")
	    public ResponseEntity<Response> addPet(@RequestBody PetDTO petDTO, @AuthenticationPrincipal Worker currentUser) {
	        Response response = petService.addPet(petDTO, currentUser);
	        return ResponseEntity.status(response.getStatusCode()).body(response);
	    }

	    // Obtener todas las mascotas
	    @GetMapping("/")
	    public ResponseEntity<Response> getAllPets() {
	        Response response = petService.getAllPets();
	        return ResponseEntity.status(response.getStatusCode()).body(response);
	    }

	    // Obtener mascota por ID
	    @GetMapping("/{petId}")
	    public ResponseEntity<Response> getPetById(@PathVariable Long petId) {
	        Response response = petService.getPetById(petId);
	        return ResponseEntity.status(response.getStatusCode()).body(response);
	    }

	    // Actualizar mascota
	    @PutMapping("/edit/{petId}")
	    public ResponseEntity<Response> updatePet(@PathVariable Long petId, @RequestBody PetDTO petDTO) {
	        Response response = petService.updatePet(petId, petDTO);
	        return ResponseEntity.status(response.getStatusCode()).body(response);
	    }

	    // Eliminar mascota (l√≥gico)
	    @DeleteMapping("/{petId}")
	    public ResponseEntity<Response> deletePet(@PathVariable Long petId, @AuthenticationPrincipal Worker currentUser) {
	        Response response = petService.deletePet(petId, currentUser);
	        return ResponseEntity.status(response.getStatusCode()).body(response);
	    }
	}

}
